$date
	Wed Dec 11 20:46:01 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module DMux4Way_test $end
$scope module dmux4way $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # c $end
$var wire 1 $ d $end
$var wire 1 % in $end
$var wire 2 & sel [1:0] $end
$var wire 1 ' w0 $end
$var wire 1 ( w1 $end
$scope module g0 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 % in $end
$var wire 1 ) sel $end
$var wire 1 * w1 $end
$scope module not0 $end
$var wire 1 ) in $end
$var wire 1 * out $end
$upscope $end
$scope module and0 $end
$var wire 1 % a $end
$var wire 1 * b $end
$var wire 1 ' out $end
$var wire 1 + w $end
$scope module not0 $end
$var wire 1 + in $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 % a $end
$var wire 1 ) b $end
$var wire 1 ( out $end
$var wire 1 , w $end
$scope module not0 $end
$var wire 1 , in $end
$var wire 1 ( out $end
$upscope $end
$upscope $end
$upscope $end
$scope module g1 $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 ' in $end
$var wire 1 - sel $end
$var wire 1 . w1 $end
$scope module not0 $end
$var wire 1 - in $end
$var wire 1 . out $end
$upscope $end
$scope module and0 $end
$var wire 1 ' a $end
$var wire 1 . b $end
$var wire 1 ! out $end
$var wire 1 / w $end
$scope module not0 $end
$var wire 1 / in $end
$var wire 1 ! out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 ' a $end
$var wire 1 - b $end
$var wire 1 " out $end
$var wire 1 0 w $end
$scope module not0 $end
$var wire 1 0 in $end
$var wire 1 " out $end
$upscope $end
$upscope $end
$upscope $end
$scope module g2 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 ( in $end
$var wire 1 1 sel $end
$var wire 1 2 w1 $end
$scope module not0 $end
$var wire 1 1 in $end
$var wire 1 2 out $end
$upscope $end
$scope module and0 $end
$var wire 1 ( a $end
$var wire 1 2 b $end
$var wire 1 # out $end
$var wire 1 3 w $end
$scope module not0 $end
$var wire 1 3 in $end
$var wire 1 # out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 ( a $end
$var wire 1 1 b $end
$var wire 1 $ out $end
$var wire 1 4 w $end
$scope module not0 $end
$var wire 1 4 in $end
$var wire 1 $ out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
bx &
x%
x$
x#
x"
x!
$end
#1
0!
0#
0"
0$
1/
13
1*
1.
10
12
14
0'
0(
0)
0-
01
1+
1,
b0 &
0%
#2
0.
02
1-
11
b1 &
#3
0*
1.
12
1)
0-
01
b10 &
#4
0.
02
1-
11
b11 &
#5
1!
0/
1'
0#
0+
13
1*
1.
12
0(
0)
0-
01
1,
b0 &
1%
#6
0!
1/
1"
0.
00
02
1-
11
b1 &
#7
1#
0'
03
0!
1+
1(
1/
0"
0*
0,
1.
10
12
1)
0-
01
b10 &
#8
0#
13
1$
0.
02
04
1-
11
b11 &
#9
